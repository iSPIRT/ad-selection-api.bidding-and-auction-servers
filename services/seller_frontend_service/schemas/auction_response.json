{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "/SellerFrontEnd/AuctionResponse",
  "type": "object",
  "additionalProperties": false,
  "$defs": {
    "errorDef": {
      "type": "object",
      "properties": {
        "code": { "type": "number" },
        "message": { "type": "string" }
      },
      "additionalProperties": false
    },
    "reportingUrlsDef": {
      "type": "object",
      "properties": {
        "reportingURL": { "type": "string" },
        "interactionReportingURLs": {
          "patternProperties": {
            ".*": {
              "type": "string"
            }
          }
        }
      }
    },
    "winReportingUrlsDef": {
      "type": "object",
      "buyerReportingURLs": { "$ref": "#/$defs/reportingUrlsDef" },
      "componentSellerReportingURLs": { "$ref": "#/$defs/reportingUrlsDef" },
      "topLevelSellerReportingURLs": { "$ref": "#/$defs/reportingUrlsDef" }
    },
    "debugReportDef": {
      "type": "object",
      "properties": {
        "isWinReport": { "type": "bool" },
        "isSellerReport": { "type": "bool" },
        "componentWin": { "type": "bool" },
        "url": { "type": "string" }
      },
      "additionalProperties": false
    },
    "debugReportsPerOriginDef": {
      "type": "object",
      "properties": {
        "adTechOrigin": { "type": "string" },
        "reports": {
          "type": "array",
          "items": { "$ref": "#/$defs/debugReportDef" }
        }
      },
      "required": ["adTechOrigin", "reports"],
      "additionalProperties": false
    },
    "KAnonJoinCandidate": {
        "properties": {
            "adRenderURLHash": {
                "type": "string",
                "description": "Protected Audience: - SHA-256 hash of the tuple: render_url, interest group owner, reportWin()   UDF endpoint. Protected App Signals: - SHA-256 hash of render_url, reportWin UDF endpoint. NOTE: The buyer's reportWin() UDF url endpoint must match with what Chrome has. Refer to the spec to create key hashes-   https://wicg.github.io/turtledove/#query-ad-k-anonymity-count"
            },
            "adComponentRenderURLsHash": {
                "items": {
                    "type": "string"
                },
                "type": "array",
                "description": "Protected Audience: - SHA-256 hash of an ad_component_render_url. Refer to the spec to create key hashes- https://wicg.github.io/turtledove/#query-component-ad-k-anonymity-count Note: There is a maximum limit of 40 ad component render urls per render url. Note: Currently component ads are not in scope of Protected App Signals for Android."
            },
            "reportingIdHash": {
                "type": "string",
                "description": "Protected Audience: - SHA-256 hash should include IG owner, ad render url, reportWin() UDF url and one of the following:   - If buyerAndSellerReportingId exists, this hash should  include that.   - Else if buyerReportingId exists, hash should include that.   - Else IG name should be included in the hash. Note: By design, an adtech can use either buyerReportingId or buyerAndSellerReportingId. Note: Currently reporting Ids are not in scope of Protected Audience for Android and Protected App Signal for Android."
            }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "K Anon Join Candidate",
        "description": "Join candidates for K-Anonymity for the winner. This should include key hashes corresponding to the winning ad only. Refer https://wicg.github.io/turtledove/#k-anonymity for details around how clients call the Join API using the hash."
    },
    "GhostWinnerForTopLevelAuction": {
        "properties": {
            "adRenderURL": {
                "type": "string",
                "description": "The ad render url corresponding to ghost winner."
            },
            "adComponentRenderURLs": {
                "items": {
                    "type": "string"
                },
                "type": "array",
                "description": "Render URLs for ads which are components of the main ghost winning ad."
            },
            "modifiedBid": {
                "type": "number",
                "description": "Modified bid price corresponding to ghost winning bid."
            },
            "bidCurrency": {
                "type": "string",
                "description": "Optional. Indicates the currency used for the bid price corresponding to the ghost winner (expressed as ISO 4217 alpha code)."
            },
            "adMetadata": {
                "type": "string",
                "description": "Arbitrary metadata associated with ghost winner to pass to the top-level seller during top level auction."
            },
            "buyerReportingId": {
                "type": "string",
                "description": "BuyerReportingId of the ghost winning Ad. This will be verified with the buyerAndSellerReportingId in the Ad properties on the browser."
            },
            "selectedBuyerAndSellerReportingId": {
                "type": "string",
                "description": "SelectedBuyerAndSellerReportingId of the ghost winning Ad. This will be verified with the selectablebuyerAndSellerReportingId in the Ad properties on the browser."
            },
            "buyerAndSellerReportingId": {
                "type": "string",
                "description": "BuyerAndSellerReportingId of the ghost winning Ad. This will be verified with the buyerAndSellerReportingId in the Ad properties on the browser."
            }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "Ghost Winner For Top Level Auction",
        "description": "In case of multiseller auction, the associated data for the ghost winner will be returned so that the ghost winning bid can be scored during top level auction. This is true if there is a ghost winner after component level auction. - In case of device orchestrated component auction for web, this data will returned to the browser so that the ghost winner can be passed to the top level auction on-device. - In case of server orchestrated component auction (for web, Android), this data will be returned to the top level seller by the component level sellers."
    },
    "GhostWinnerPrivateAggregationSignals": {
        "properties": {
            "bucket": {
                "type": "string",
                "description": "128 bit integer in the form of bytestring.",
                "format": "binary"
            },
            "value": {
                "type": "integer"
            }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "Ghost Winner Private Aggregation Signals",
        "description": "Private aggregation signals for the ghost winner. Single seller auctions: This would correspond to a ghost winner if available. Note: Event type is \"reserved.loss\" and bid rejection reason is 8 when K-Anonymity threshold is not. The client should incorporate these static values; these won't be sent back."
    },
    "KAnonGhostWinner": {
        "properties": {
            "kAnonJoinCandidates": {
                "$ref": "#/$defs/KAnonJoinCandidate",
                "additionalProperties": false,
                "description": "Join candidates for the K-Anon ghost winner."
            },
            "interestGroupIndex": {
                "type": "integer",
                "description": "Interest group index corresponding to buyer / DSP that generated the ghost winning bid. Note: This is only relevant in case of Protected Audience."
            },
            "owner": {
                "type": "string",
                "description": "Origin (Chrome) and domain (Android) of the buyer / DSP who owns the ghost winner. Protected Audience: This refers to the Interest Group owner. Proptected App Signal: This refers to the buyer domain."
            },
            "ghostWinnerPrivateAggregationSignals": {
                "$ref": "#/$defs/GhostWinnerPrivateAggregationSignals",
                "additionalProperties": false
            },
            "ghostWinnerForTopLevelAuction": {
                "$ref": "#/$defs/GhostWinnerForTopLevelAuction",
                "additionalProperties": false
            }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "K Anon Ghost Winner",
        "description": "Data for the ghost winner sent back to the client. This should also include key-hashes corresponding to the ghost winning ad. Refer https://wicg.github.io/turtledove/#k-anonymity for details around how clients call the Join API using the hash."
    },
    "PAggBucketAndValue": {
      "type": "object",
      "properties": {
        "bucket": {"type": "string"},
        "value": {"type": "integer"}
      },
      "required": ["bucket", "value"],
      "additionalProperties": false,
      "description": "Bucket and Value of a Private Aggregation contribution."
    },
    "PAggEventContribution": {
      "type": "object",
      "properties": {
        "contributions": {
            "type": "array",
            "items": { "$ref": "#/$defs/PAggBucketAndValue"}
          },
        "event": {"type": "string"}
      },
      "required": ["event","contributions"],
      "additionalProperties": false,
      "description": "Group of event type and associated Private Aggregation contributions. event is set only if the contribution was made for a custom event or in case of component auctions for the winning buyer and seller. Event type supported: reserved.win, reserved.loss, reserved.always and custom events(not starting with reserved."
    },
   "PAggResponsePerIg": {
      "type": "object",
      "properties": {
        "eventContributions": {
          "type": "array",
          "items": {"$ref": "#/$defs/PAggEventContribution"}
        },
        "igIndex": {"type": "integer"},
        "coordinator": {"type": "string"},
        "componentWin": {"type": "boolean"}
    },
    "required": ["eventContributions"],
    "description": "All Private Aggregation contributions made for a specific IG. coordinator is only populated for component seller. componentWin is set only for winning buyer and seller's contributions made for the winning IG in case of multi seller auctions. componentWin is expected to be false by default if not set. igIndex is only set for the buyer and is expected to not be set for the seller."
   },
   "PAggResponsePerOrigin": {
      "type": "object",
      "properties": {
        "igContributions": {
          "type": "array",
          "items": {"$ref": "#/$defs/PAggResponsePerIg"}
        },
        "reportingOrigin": {"type": "string"}
    },
    "required": ["igContributions","reportingOrigin"],
    "description": "reportingOrigin(buyer or seller origin) and all the corresponding Private Aggregation contributions made."
   }
  },
  "properties": {
    "adRenderURL": {
      "type": "string",
      "description": "The ad that will be rendered on the end user's device."
    },
    "components": {
      "type": "array",
      "description": "List of render URLs for component ads to be displayed as part of this ad",
      "items": {
        "type": "string"
      }
    },
    "interestGroupName": {
      "type": "string",
      "description": "Name of the InterestGroup (Custom Audience), the remarketing ad belongs to."
    },
    "interestGroupOwner": {
      "type": "string",
      "description": "Origin of the Buyer who owns the interest group that includes the ad."
    },
    "biddingGroups": {
      "type": "object",
      "description": "Map from interest group owner to a list of interest groups that bid in this auction",
      "patternProperties": {
        "^https://": {
          "type": "array",
          "items": {
            "type": "number",
            "description": "Indices of interest groups in the original request for this owner that submitted a bid for this auction. This is used to update the bidCount for these interest groups. Note that we send the index instead of the name because that allows us to avoid compressing separately."
          }
        }
      },
      "additionalProperties": false
    },
    "score": {
      "type": "number",
      "description": "Score of the ad determined during the auction. Any value that is zero or negative indicates that the ad cannot win the auction. The winner of the auction would be the ad that was given the highest score. The output from ScoreAd() script is desirability that implies score for an ad."
    },
    "bid": {
      "type": "number",
      "description": "Bid price corresponding to an ad."
    },
    "bidCurrency": {
      "type": "string",
      "description": "Optional currency of the bid (three uppercase letters, ISO 4217 alpha code suggested)."
    },
    "buyerReportingId": {
      "type": "string",
      "description": "Optional BuyerReportingId of the winning Ad."
    },
    "buyerAndSellerReportingId": {
      "type": "string",
      "description": "Optional BuyerAndSellerReportingId of the winning Ad."
    },
    "isChaff": {
      "type": "boolean",
      "description": "Boolean to indicate that there is no remarketing winner from the auction. AuctionResult may be ignored by the client (after decryption) if this is set to true."
    },
    "winReportingURLs": { "$ref": "#/$defs/winReportingUrlsDef" },
    "debugReports": {
      "type": "array",
      "items": { "$ref": "#/$defs/debugReportsPerOriginDef" },
      "description": "Debug reporting metadata needed to send debug pings on device."
    },
    "error": { "$ref": "#/$defs/errorDef" },
    "adMetadata": {
      "type": "string",
      "description": "Arbitrary metadata to pass to the top-level seller."
    },
    "topLevelSeller": {
      "type": "string",
      "description": "Optional name/domain for top-level seller in case this is a component auction."
    },
    "kAnonWinnerJoinCandidates": {
        "$ref": "#/$defs/KAnonJoinCandidate",
        "additionalProperties": false
    },
    "kAnonWinnerPositionalIndex": {
        "type": "integer",
        "description": "Positional index of the k-anon winner, if there is a winner returned to the client (web browser, Android) for emitting metrics. Note: Positional index \u003e= 0. - If this is equal to 0, that would imply the highest scored bid is also K-Anonymous and hence a winner. - If this is greater than 0, the positional index would imply the index of first K-Anonymous scored bid in a sorted list in decreasing order of scored bids. In this case, the highest scored bid that is not K-Anonymous is the ghost winner. - In case all scored bids fail the K-Anonymity constraint, this would be set to -1 since there is no winner. - In case all scored bids \u003c= 0, this would be set to -1 since there is no winner."
    },
    "kAnonGhostWinners": {
        "items": {
            "$ref": "#/$defs/KAnonGhostWinner"
        },
        "additionalProperties": false,
        "type": "array"
    },
    "paggResponse": {
      "type": "array",
      "items": {"$ref": "#/$defs/PAggResponsePerOrigin"},
      "description": "All the Private Aggregation contributions made by seller and associated buyers along with the metadata needed to send the final report on device."
    },
    "nonce": {
      "type": "string",
      "description": "The Ad-Auction-Result-Nonce sent by the seller in the SelectAdRequest for parallelized Protected Auctions mixed mode. This is included with the bid, error and the chaff response"
    }
  }
}
