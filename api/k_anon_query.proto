// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package google.chrome.kanonymityquery.v1;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";

// The API for the k-Anonymity Query Service.
service KAnonymousSetsQueryService {
  // Endpoint clients can use to filter a given request of interest group hashes
  // to those that are k-anonymous: https://google.aip.dev/136#stateless-methods
  rpc ValidateHashes(ValidateHashesRequest) returns (ValidateHashesResponse) {
    option (google.api.http) = {
      post: "/v1:validateHashes"
      body: "*"
    };
  }
}

// A singular instance of interest group hashes belonging to the given set type.
message TypeSetsMap {
  // The set type of the hashes.
  string type = 1 [(google.api.field_behavior) = REQUIRED];
  // The SHA256 hashes corresponding to the sets of interest.
  repeated bytes hashes = 2 [(google.api.field_behavior) = REQUIRED];
}

// Request for the ValidateHashes endpoint, specifying the set types and hashes
// of interest.
message ValidateHashesRequest {
  // Sets the client is interested in learning the k-anonymity status of.
  repeated TypeSetsMap sets = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response for the ValidateHashes endpoint, specifying the k-anonymous hashes.
message ValidateHashesResponse {
  // The sets that are k-anonymous.
  repeated TypeSetsMap k_anonymous_sets = 1 [(google.api.field_behavior) = REQUIRED];
}
